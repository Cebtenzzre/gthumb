dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.52)

AC_INIT(gthumb, 2.6.7, http://bugzilla.gnome.org/enter_bug.cgi?product=gthumb)
AC_CONFIG_SRCDIR(src/main.c)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

AM_CONFIG_HEADER(config.h)

AM_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC

dnl ==========================================================================
dnl
dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!
dnl
dnl ==========================================================================

GLIB_REQUIRED=2.4.0
GTK_REQUIRED=2.4.0
LIBXML_REQUIRED=2.4.0
LIBGNOME_REQUIRED=2.6.0
LIBGNOMEUI_REQUIRED=2.6.0
LIBGNOMECANVAS_REQUIRED=2.6.0
GNOME_VFS_REQUIRED=2.6.0
LIBGLADE_REQUIRED=2.4.0
LIBGNOMEPRINT_REQUIRED=2.6.0
LIBGNOMEPRINTUI_REQUIRED=2.6.0
LIBBONOBO_REQUIRED=2.6.0
LIBBONOBOUI_REQUIRED=2.6.0
LIBEXIF_0_5_REQUIRED=0.5.12
LIBEXIF_REQUIRED=0.6.9
LIBGPHOTO_REQUIRED=2.1.3

AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(LIBXML_REQUIRED)
AC_SUBST(LIBGNOME_REQUIRED)
AC_SUBST(LIBGNOMEUI_REQUIRED)
AC_SUBST(LIBGNOMECANVAS_REQUIRED)
AC_SUBST(GNOME_VFS_REQUIRED)
AC_SUBST(LIBGLADE_REQUIRED)
AC_SUBST(LIBGNOMEPRINT_REQUIRED)
AC_SUBST(LIBGNOMEPRINTUI_REQUIRED)
AC_SUBST(LIBBONOBO_REQUIRED)
AC_SUBST(LIBBONOBOUI_REQUIRED)
AC_SUBST(LIBEXIF_REQUIRED)

dnl ===========================================================================

AM_PATH_ORBIT2

PKG_CHECK_MODULES(GTHUMB,				\
	glib-2.0 >= $GLIB_REQUIRED			\
	gthread-2.0					\
	gmodule-2.0					\
	gtk+-2.0 >= $GTK_REQUIRED			\
	libgnome-2.0 >= $LIBGNOME_REQUIRED		\
	libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED		\
	libgnomecanvas-2.0 >= $LIBGNOMECANVAS_REQUIRED	\
	gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED		\
	gnome-vfs-module-2.0				\
	libxml-2.0 >= $LIBXML_REQUIRED			\
	libglade-2.0 >= $LIBGLADE_REQUIRED		\
	libgnomeprint-2.2 >= $LIBGNOMEPRINT_REQUIRED	\
	libgnomeprintui-2.2 >= $LIBGNOMEPRINTUI_REQUIRED)
AC_SUBST(GTHUMB_LIBS)
AC_SUBST(GTHUMB_CFLAGS)

PKG_CHECK_MODULES(COMPONENT,				\
	glib-2.0 >= $GLIB_REQUIRED			\
	gthread-2.0					\
	gmodule-2.0					\
	gtk+-2.0 >= $GTK_REQUIRED			\
	libgnome-2.0 >= $LIBGNOME_REQUIRED		\
	libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED		\
	libgnomecanvas-2.0 >= $LIBGNOMECANVAS_REQUIRED	\
	gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED		\
	gnome-vfs-module-2.0				\
	libxml-2.0 >= $LIBXML_REQUIRED			\
	libglade-2.0 >= $LIBGLADE_REQUIRED		\
	libgnomeprint-2.2 >= $LIBGNOMEPRINT_REQUIRED	\
	libgnomeprintui-2.2 >= $LIBGNOMEPRINTUI_REQUIRED\
	libbonobo-2.0 >= $LIBBONOBO_REQUIRED		\
	libbonoboui-2.0 >= $LIBBONOBOUI_REQUIRED)
AC_SUBST(COMPONENT_LIBS)
AC_SUBST(COMPONENT_CFLAGS)

AC_C_BIGENDIAN
AC_PROG_CPP


dnl ###############################################

# 
# Checks for libpng
# 
AC_MSG_CHECKING(for libpng)
  if test -z "$PNG_LIBS"; then
    AC_CHECK_LIB(png, png_read_info,
      [AC_CHECK_HEADER(png.h,
        png_ok=yes,
        png_ok=no)],
      AC_MSG_ERROR(*** PNG library (libpng) not found ***), -lz -lm)
    if test "$png_ok" = yes; then
      AC_MSG_CHECKING([for png_structp in png.h])
      AC_TRY_COMPILE([#include <png.h>],
        [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
        png_ok=yes,
        png_ok=no)
      AC_MSG_RESULT($png_ok)
      if test "$png_ok" = yes; then
        PNG_LIBS='-lpng -lz'
      else
        AC_MSG_ERROR(*** PNG library (libpng) is too old ***)
      fi
    else
     AC_MSG_ERROR(*** PNG header file not found ***)
    fi
  fi

AC_SUBST(PNG_LIBS)


# 
# Checks for libjpeg
# 
jpeg_ok=no
AC_MSG_CHECKING(for libjpeg)
  if test -z "$JPEG_LIBS"; then
    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
      [AC_CHECK_HEADER(jpeglib.h,
        jpeg_ok=yes,
        jpeg_ok=no)],
      AC_MSG_WARN([*** Internal jpegtran will not be built (JPEG library not found) ***]), -lm)
    if test "$jpeg_ok" = yes; then
      JPEG_LIBS='-ljpeg'
      AC_DEFINE(HAVE_LIBJPEG, 1, [Have libjpeg])
      AC_CHECK_LIB(jpeg, jpeg_simple_progression,     
        AC_DEFINE(HAVE_PROGRESSIVE_JPEG, 1,
                  [Define to 1 if jpeglib supports progressive JPEG.]),
        AC_MSG_WARN(JPEG library does not support progressive saving.))
    else
      AC_MSG_WARN([*** Internal jpegtran will not be built (JPEG library not found) ***])
    fi
  fi

AC_SUBST(JPEG_LIBS)


# 
# Checks for libtiff
# 
tiff_ok=no
AC_MSG_CHECKING(for libtiff)
  if test -z "$TIFF_LIBS"; then
    AC_CHECK_LIB(tiff, TIFFWriteScanline,
      [AC_CHECK_HEADER(tiffio.h,
        tiff_ok=yes,
        tiff_ok=no)],
      AC_MSG_WARN([*** (TIFF library not found) ***]), -lm -lz)
    if test "$tiff_ok" = yes; then
      TIFF_LIBS='-ltiff -ljpeg -lz'
      AC_DEFINE(HAVE_LIBTIFF, 1, [Have libtiff])
    else
      AC_MSG_WARN([*** (TIFF library not found) ***])
    fi
  fi

AC_SUBST(TIFF_LIBS)


#
# Checks for Xft/XRender
#
have_render=false
RENDER_LIBS=""
AC_CHECK_LIB(Xrender, XRenderFindFormat, 
    have_render=true,:,-lXext $GTHUMB_LIBS)
if $have_render ; then
   RENDER_LIBS="-lXrender -lXext"
   AC_DEFINE(HAVE_RENDER, 1, [Have Xft/XRender])
fi
AC_SUBST(RENDER_LIBS)

#
# Checks for libexif
#
AC_MSG_CHECKING(for libexif)
have_libexif=no
EXIF_LIBS=""
EXIF_CFLAGS=""
if pkg-config --atleast-version=$LIBEXIF_REQUIRED libexif; then
   have_libexif="yes (0.6.x)"
   EXIF_LIBS=`pkg-config --libs libexif`
   EXIF_CFLAGS=`pkg-config --cflags libexif`
   AC_DEFINE(HAVE_LIBEXIF, 1, [Have libexif])
elif pkg-config --atleast-version=$LIBEXIF_0_5_REQUIRED libexif; then
   have_libexif="yes (0.5.x)"
   EXIF_LIBS=`pkg-config --libs libexif`
   EXIF_CFLAGS=`pkg-config --cflags libexif`
   AC_DEFINE(HAVE_LIBEXIF, 1, [Have libexif])
   AC_DEFINE(HAVE_LIBEXIF_0_5, 1, [Have libexif 0.5.x])
fi
AC_MSG_RESULT($have_libexif)
AC_SUBST(EXIF_LIBS)
AC_SUBST(EXIF_CFLAGS)

#
# Checks for libgphoto2
#
AC_MSG_CHECKING(for libgphoto2)
have_libgphoto=no
LIBGPHOTO_LIBS=""
LIBGPHOTO_CFLAGS=""
if pkg-config --atleast-version=$LIBGPHOTO_REQUIRED libgphoto2; then
   have_libgphoto=yes
   LIBGPHOTO_LIBS=`pkg-config --libs libgphoto2`
   LIBGPHOTO_CFLAGS=`pkg-config --cflags libgphoto2`
   AC_DEFINE(HAVE_LIBGPHOTO, 1, [Have libgphoto])
fi
AC_MSG_RESULT($have_libgphoto)
AC_SUBST(LIBGPHOTO_LIBS)
AC_SUBST(LIBGPHOTO_CFLAGS)

dnl ###############################################

IDL_MODULES="bonobo-activation-2.0 libbonobo-2.0 libbonoboui-2.0"
VIEWER_IDL_INCLUDES="`$PKG_CONFIG --variable=idldir $IDL_MODULES | $srcdir/add-include-prefix`"
AC_SUBST(VIEWER_IDL_INCLUDES)

dnl ###############################################

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PATH_PROG(GLIB_MKENUMS, glib-mkenums)

ALL_LINGUAS="am az be bg ca cs da de el en_CA en_GB es eu fi fr ga gu hi hr hu id it ja ko lt lv mk ml ms nb nl nn no pa pl pt pt_BR ru rw sk sq sr sr@Latn sv tr uk xh zh_CN zh_TW"
GETTEXT_PACKAGE=gthumb
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [GetText Package])
AM_GLIB_GNU_GETTEXT

AC_PROG_INTLTOOL([0.21])

if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(LOCALEDIR, "${ac_default_prefix}/${DATADIRNAME}/locale", [Locale directory])
else
  AC_DEFINE_UNQUOTED(LOCALEDIR, "${prefix}/${DATADIRNAME}/locale", [Locale directory])
fi

dnl ******************************

AC_ARG_ENABLE(deprecations,AC_HELP_STRING([--enable-deprecations],[warn about deprecated usages]))

AM_CONDITIONAL(ENABLE_DEPRECATIONS, test "x$enable_deprecations" = xyes)

dnl ******************************

AC_ARG_ENABLE(schemas-install,AC_HELP_STRING([--disable-schemas-install],
                                             [Disable installation of the gconf
schemas]))

AM_CONDITIONAL(SCHEMAS_INSTALL, test x$enable_schemas_install != xno)

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
if test x"$GCONFTOOL" = xno; then
        AC_MSG_ERROR([gconftool-2 executable not found in your path - should be
installed with GConf])
fi
AM_GCONF_SOURCE_2

dnl ******************************

MODULE_LIBTOOL_FLAGS="-module -avoid-version"
AC_SUBST(MODULE_LIBTOOL_FLAGS)

AC_OUTPUT([
Makefile
po/Makefile.in
libgthumb/Makefile
libgthumb/cursors/Makefile
libgthumb/icons/Makefile
src/Makefile
src/icons/Makefile
src/jpegutils/Makefile
components/Makefile
components/image-viewer/Makefile
components/catalog-view/Makefile
doc/Makefile
doc/C/Makefile
data/Makefile
data/albumthemes/Makefile
data/albumthemes/BlueStripes/Makefile
data/albumthemes/Classic/Makefile
data/albumthemes/ClassicClips/Makefile
data/albumthemes/Clean/Makefile
data/albumthemes/NeatRound/Makefile
data/albumthemes/NeatSquare/Makefile
data/glade/Makefile
])

echo "

Configuration:

        Source code location:   ${srcdir}
        Compiler:               ${CC}
    	Have Render:            ${have_render}
    	Have libexif:           ${have_libexif}
	Have libjpeg:           ${jpeg_ok}
	Have libtiff:           ${tiff_ok}
	Have libgphoto:         ${have_libgphoto}

"
